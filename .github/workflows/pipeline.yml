name: Run Message Mind Pipeline

on:
  schedule:
    - cron: 0 * * * *   # Every hour
  push:
    branches:
      - main
      - cicd

jobs:
  telethon-extraction:
    name: Extract messages from Telegram
    runs-on: ubuntu-latest
    container:
      image: python:3.12-slim

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        run: |
          pip install uv

      - name: Install system dependencies
        run: |
          apt-get update
          apt-get install -y openssl ca-certificates libssl-dev
          rm -rf /var/lib/apt/lists/*

      - name: Verify OpenSSL version
        run: |
          openssl version
          python -c "import ssl; print(ssl.OPENSSL_VERSION)"

      - name: Set up environment variables
        run: |
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_URI=${{ secrets.DB_URI }}" >> .env
          echo "DB_APP_NAME=${{ secrets.DB_APP_NAME }}" >> .env
          echo "DB_COLLECTION_NAME=${{ secrets.DB_COLLECTION_NAME }}" >> .env

          echo "BOT_TELETHON_SESSION_B64=${{ secrets.BOT_TELETHON_SESSION_B64 }}" >> .env
          echo "USER_TELETHON_SESSION_B64=${{ secrets.USER_TELETHON_SESSION_B64 }}" >> .env
          echo "TELEGRAM_CHAT_API_ID=${{ secrets.TELEGRAM_CHAT_API_ID }}" >> .env
          echo "TELEGRAM_CHAT_API_HASH=${{ secrets.TELEGRAM_CHAT_API_HASH }}" >> .env
          echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" >> .env

        shell: bash

      - name: Install Python dependencies
        run: |
          uv sync

      - name: Restore Telethon client session
        run: |
          echo "${{ secrets.BOT_TELETHON_SESSION_B64 }}" | base64 -d > bot.session
          echo "${{ secrets.USER_TELETHON_SESSION_B64 }}" | base64 -d > joanna.session

      - name: Run Telethon extraction script

        run: |
          uv run src/message_mind/database_management/main.py
